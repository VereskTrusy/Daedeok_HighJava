-- 24.01.11 
SELECT LPROD_ID AS ID 
    , LPROD_GU AS GU 
    , LPROD_NM AS NM 
FROM LPROD;


-- jdbcTest02
-- 문제 1) 사용자로부터 LPROD_ID값을 입력 받아 입력한 값보다 LPROD_ID가 큰 자료들을 출력하시오.
SELECT LPROD_ID AS ID
     , LPROD_GU AS GU
     , LPROD_NM AS NM
FROM LPROD
WHERE 1=1
AND LPROD_ID > 3;
-- 복사용
SELECT LPROD_ID AS ID, LPROD_GU AS GU, LPROD_NM AS NM FROM LPROD WHERE 1=1 AND LPROD_ID > 3;


-- 문제 2) 사용자로부터 LPROD_ID값을 입력 받아 입력한 값보다 LPROD_ID가 큰 자료들을 출력하시오.
SELECT LPROD_ID AS ID
     , LPROD_GU AS GU
     , LPROD_NM AS NM
FROM LPROD
WHERE 1=1
AND LPROD_ID >= 3
AND LPROD_ID <= 6;
SELECT LPROD_ID AS ID
     , LPROD_GU AS GU
     , LPROD_NM AS NM
FROM LPROD
WHERE 1=1
AND LPROD_ID BETWEEN 3 AND 6;
-- 복사용
SELECT LPROD_ID AS ID, LPROD_GU AS GU, LPROD_NM AS NM FROM LPROD WHERE 1=1 AND LPROD_ID >= 3 AND LPROD_ID <= 6;


-- 테이블 만들기
CREATE TABLE BANKINFO(
    BANK_NO VARCHAR(40) NOT NULL, /* 계좌번호 */
    BANK_NAME VARCHAR(40) NOT NULL, /* 은행명 */
    BANK_USER_NAME VARCHAR(30) NOT NULL, /* 예금주명 */
    BANK_DATE DATE NOT NULL, /* 개설일자 */
    CONSTRAINT PK_BANKINFO PRIMARY KEY(BANK_NO)
);
-- 정보 추가 하기
INSERT INTO BANKINFO(BANK_NO, BANK_NAME, BANK_USER_NAME, BANK_DATE)
VALUES('123456-789-1233', '국민은행', '홍영감', SYSDATE);
-- commit
commit;
-- 조회
SELECT * FROM BANKINFO;
SELECT BANK_NO , BANK_NAME , BANK_USER_NAME , BANK_DATE FROM BANKINFO;

-- LPROD 테이블의 ID 시퀀스값 구하기
SELECT MAX(LPROD_ID) + 1 AS MAXID
FROM LPROD;
-- GU 중복조회
SELECT COUNT(LPROD_GU) AS IDCHK
FROM LPROD WHERE LPROD_GU = 'P101';
-- LPROD 테이블에 정보 삽입
INSERT INTO LPROD(LPROD_ID, LPROD_GU, LPROD_NM)
VALUES();

SELECT * FROM LPROD;

SELECT * FROM MEMBER;

select '안녕'''하세요' from dual;
















